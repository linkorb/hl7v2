        $s = '';

        $sep = $this->isSubcomponent
            ? $this->encodingParameters->getSubcomponentSep()
            : $this->encodingParameters->getComponentSep()
        ;

{% for component in components -%}
    {% if loop.index == 1 %}
        if ($this->get{{ component.name }}(){% if component.simple %} && $this->get{{ component.name }}()->hasValue(){% endif %}) {
            $s .= (string) $this->get{{ component.name }}(){% if component.simple %}->getValue(){% endif %};
        }
    {%- else %}
        {%- if loop.index == 2 %}


        $emptyComponentsSinceLastComponent = 0;
        {%- endif %}


        if (!$this->get{{ component.name }}(){% if component.simple %} || !$this->get{{ component.name }}()->hasValue(){% endif %}) {
            ++$emptyComponentsSinceLastComponent;
        } else {
        {%- if component.simple %}

            $s .= str_repeat($sep, 1 + $emptyComponentsSinceLastComponent)
                . (string) $this->get{{ component.name }}()->getValue()
            ;
            $emptyComponentsSinceLastComponent = 0;
        {%- else %}

            $value = (string) $this->get{{ component.name }}();
            if ('' === $value) {
                ++$emptyComponentsSinceLastComponent;
            } else {
                $s .= str_repeat($sep, 1 + $emptyComponentsSinceLastComponent)
                    . $value
                ;
                $emptyComponentsSinceLastComponent = 0;
            }
        {%- endif %}

        }
    {%- endif %}
{% endfor %}


        return $s;